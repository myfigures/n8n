{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "HighLevel2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "HighLevel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HighLevel": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        []
      ]
    },
    "HighLevel1": {
      "main": [
        []
      ]
    },
    "HighLevel2": {
      "main": [
        [
          {
            "node": "HighLevel1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-08-04T12:18:15.578Z",
  "id": "3pSqQ6jYMincEk3A",
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 10
            }
          ]
        }
      },
      "id": "0f621bf1-4162-4822-ac60-0fb46966c5f0",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        1000,
        620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://rest.gohighlevel.com/v1/contacts/{{ $('HighLevel').item.json.id }}/workflow/22b17e3a-8995-483d-8703-89bcb34043e9",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2NhdGlvbl9pZCI6InBiY2dKY0xOM3pDRENxamh5Q2NSIiwiY29tcGFueV9pZCI6InJ0SFNyNzlXa1ZtRHFiQXo0SmlCIiwidmVyc2lvbiI6MSwiaWF0IjoxNjg2NTg4NzY4NTI0LCJzdWIiOiJ1c2VyX2lkIn0.ybLXs2x-pn84b04jPi-neK6mUDOuXef7IWEMVJixRMU"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={ \"eventStartTime\": \"{{ $json.eventStartTime }}\" }",
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "66c53526-b48b-4f92-9af1-c6f86197175b",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2460,
        580
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "135SwoZdWa_Y_NC9RcBYgLR7HxPZwWGQlc3oqXOaaotM",
          "mode": "list",
          "cachedResultName": "Sports Refund Products",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/135SwoZdWa_Y_NC9RcBYgLR7HxPZwWGQlc3oqXOaaotM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/135SwoZdWa_Y_NC9RcBYgLR7HxPZwWGQlc3oqXOaaotM/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Last Name"
            }
          ]
        },
        "options": {}
      },
      "id": "359b6370-92e4-48f4-8684-401d4a694b7c",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1540,
        580
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "E0d4HN1q38dEJfXE",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "filters": {
          "query": "={{ $json.Tags }}"
        },
        "options": {}
      },
      "id": "61c06614-ae65-4ada-b70b-7031ecd1cc5a",
      "name": "HighLevel",
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 1,
      "position": [
        1760,
        580
      ],
      "credentials": {
        "highLevelApi": {
          "id": "ImExcBFw7UTEfOCF",
          "name": "Sports Refund Test"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Function to format a number with leading zeros\nfunction padWithZeros(number, length) {\n  return number.toString().padStart(length, '0');\n}\n\n// Get the current date and time\nconst currentDate = new Date();\n\n// Add 2 seconds to the current time\ncurrentDate.setSeconds(currentDate.getSeconds() + 2);\n\n// Determine if Daylight Saving Time (DST) is in effect\nconst isDST = (date) => {\n  const jan = new Date(date.getFullYear(), 0, 1);\n  const jul = new Date(date.getFullYear(), 6, 1);\n  const stdTimezoneOffset = Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n  return date.getTimezoneOffset() < stdTimezoneOffset;\n};\n\n// Calculate the timezone offset for Eastern Time (ET)\nconst isEasternDST = isDST(currentDate);\nconst easternTimeOffset = isEasternDST ? -4 : -5;\nconst easternTimezoneOffset = `-${padWithZeros(Math.abs(easternTimeOffset), 2)}:00`;\n\n// Format the date in the desired output format with the Eastern Timezone offset\nconst formattedDate = `${currentDate.toISOString().slice(0, 19)}${easternTimezoneOffset}`;\n\n// Output the formatted date\nreturn {\n  json: {\n    eventStartTime: formattedDate,\n  },\n};\n"
      },
      "id": "57afeae9-688f-4b09-ac8b-2ac40025f4e2",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1980,
        580
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "contactId": "={{ $json.id }}",
        "updateFields": {
          "customFields": {
            "values": [
              {
                "fieldId": "vD4fHizznz66maSHfE7F",
                "fieldValue": "start"
              }
            ]
          },
          "email": "=done+{{ $json.id }}@leadbuilt.com"
        }
      },
      "id": "bf371e89-4e59-4289-8007-33a88480a8ae",
      "name": "HighLevel1",
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 1,
      "position": [
        1640,
        820
      ],
      "credentials": {
        "highLevelApi": {
          "id": "ImExcBFw7UTEfOCF",
          "name": "Sports Refund Test"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 5,
        "filters": {
          "query": "=brock"
        },
        "options": {}
      },
      "id": "01529642-4c3d-472a-9672-a68407bde4d5",
      "name": "HighLevel2",
      "type": "n8n-nodes-base.highLevel",
      "typeVersion": 1,
      "position": [
        1300,
        800
      ],
      "credentials": {
        "highLevelApi": {
          "id": "ImExcBFw7UTEfOCF",
          "name": "Sports Refund Test"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2023-08-05T01:31:54.312Z",
  "versionId": "dcc0d6f3-a818-45f3-9455-693e74d3ab50"
}